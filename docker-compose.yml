version: '3.9'

services:
  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: user
      MINIO_ROOT_PASSWORD: password
    command: server --console-address ":9001" /data

  auth-db:
    image: postgres:15
    environment:
      - POSTGRES_USER=${AUTH_DB_USER}
      - POSTGRES_PASSWORD=${AUTH_DB_PASSWORD}
      - POSTGRES_DB=${AUTH_DB_NAME}
    ports:
      - "${AUTH_DB_EXTERNAL_PORT}:${AUTH_DB_PORT}"
    restart: always
    deploy:
      restart_policy:
        condition: on-failure
        window: 15m

  project-management-db:
    image: postgres:15
    environment:
      - POSTGRES_USER=${PROJECT_MANAGEMENT_DB_USER}
      - POSTGRES_PASSWORD=${PROJECT_MANAGEMENT_DB_PASSWORD}
      - POSTGRES_DB=${PROJECT_MANAGEMENT_DB_NAME}
    ports:
      - "${PROJECT_MANAGEMENT_DB_EXTERNAL_PORT}:${PROJECT_MANAGEMENT_DB_PORT}"
    restart: always
    deploy:
      restart_policy:
        condition: on-failure
        window: 15m
  
  auth:
    image: auth
    build: ./src/Auth/
    depends_on:
      - auth-db
    environment:
      - ConnectionStrings:DefaultConnection=Host=auth-db;Port=${AUTH_DB_PORT};Database=${AUTH_DB_NAME};Username=${AUTH_DB_USER};Password=${AUTH_DB_PASSWORD}
      - ASPNETCORE_ENVIRONMENT=Development
      - SymmetricSecurityKey=${SYMMETRIC_SECURITY_KEY}
      - Clients:ReactClient:ClientId=${CLIENT_ID}
      - Clients:ReactClient:Host=${DOCKER_EXTERNAL_HOST}:${CLIENT_EXTERNAL_PORT}
      - Clients:Postman:ClientId=${POSTMAN_CLIENT_ID}
      - Clients:Postman:Host=${POSTMAN_HOST}
      - Clients:ProjectManagement:ClientId=${PROJECT_MANAGEMENT_CLIENT_ID}
      - Clients:ProjectManagement:ClientSecret=${PROJECT_MANAGEMENT_SECRET}
    ports:
      - "${AUTH_EXTERNAL_PORT}:${AUTH_PORT}"
  
  client:
    image: client
    build: ./src/client/
    ports:
      - "${CLIENT_EXTERNAL_PORT}:${CLIENT_PORT}"

  sync-service:
    image: sync-service
    build: ./src/SyncService/
    environment:
      - CALLBACK_URL=http://localhost:4321
      - CALLBACK_OBJECTS={"monaco":"Text"}
      - CALLBACK_DEBOUNCE_WAIT=10
      - FILE_SERVICE_URL=http://file-service:80
    ports:
      - "${Y_WEBSOCKET_EXTERNAL_PORT}:${Y_WEBSOCKET_PORT}"
    
  project-management:
    image: project-management
    build: ./src/ProjectManagement
    depends_on:
      - project-management-db
    environment:
      - ConnectionStrings:DefaultConnection=Host=project-management-db;Port=${PROJECT_MANAGEMENT_DB_PORT};Database=${PROJECT_MANAGEMENT_DB_NAME};Username=${PROJECT_MANAGEMENT_DB_USER};Password=${PROJECT_MANAGEMENT_DB_PASSWORD}
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "${PROJECT_MANAGEMENT_EXTERNAL_PORT}:${PROJECT_MANAGEMENT_PORT}"

  file-service:
    image: file-service
    build: ./src/FileService
    depends_on:
      - minio
    environment:
      - AWS:Region=eu-north-1
      - AWS:ServiceURL=http://minio:9000
      - AWS:AccessKey=user
      - AWS:SecretKey=password
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - 5003:80
      
  sandbox-service:
    image: sandbox-service
    build: ./src/Sandbox
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - Clients:FileService:Url=http://localhost:5003
      - Clients:ProjectManagement:Url=http://localhost:5002
      - StoragePath=/var/local/storage/
      - ASPNETCORE_URLS=http://+:5005
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    network_mode: "host"
    